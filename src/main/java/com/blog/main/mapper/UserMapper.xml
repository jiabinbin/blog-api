<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.main.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.blog.main.model.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_tel" jdbcType="VARCHAR" property="userTel" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="user_account" jdbcType="VARCHAR" property="userAccount" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="user_qq" jdbcType="VARCHAR" property="userQq" />
    <result column="user_wx" jdbcType="VARCHAR" property="userWx" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_name, user_tel, create_time, update_time, user_account, password, user_qq, 
    user_wx
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="login" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where user_name = #{userName, jdbcType=VARCHAR} and password = #{password, jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.blog.main.model.User">
    insert into user (id, user_name, user_tel, 
      create_time, update_time, user_account, 
      password, user_qq, user_wx
      )
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userTel,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{userAccount,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{userQq,jdbcType=VARCHAR}, #{userWx,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.blog.main.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userTel != null">
        user_tel,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="userAccount != null">
        user_account,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="userQq != null">
        user_qq,
      </if>
      <if test="userWx != null">
        user_wx,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userTel != null">
        #{userTel,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userAccount != null">
        #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userQq != null">
        #{userQq,jdbcType=VARCHAR},
      </if>
      <if test="userWx != null">
        #{userWx,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.blog.main.model.User">
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userTel != null">
        user_tel = #{userTel,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userAccount != null">
        user_account = #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userQq != null">
        user_qq = #{userQq,jdbcType=VARCHAR},
      </if>
      <if test="userWx != null">
        user_wx = #{userWx,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blog.main.model.User">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_tel = #{userTel,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      user_account = #{userAccount,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      user_qq = #{userQq,jdbcType=VARCHAR},
      user_wx = #{userWx,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>